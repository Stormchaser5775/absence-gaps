diff --git a/nixos/modules/services/misc/gitea.nix b/nixos/modules/services/misc/gitea.nix
index 160e777f1f8075..a2a8dacafad3a2 100644
--- a/nixos/modules/services/misc/gitea.nix
+++ b/nixos/modules/services/misc/gitea.nix
@@ -6,12 +6,11 @@
   ...
 }:
 
 let
   cfg = config.services.gitea;
   opt = options.services.gitea;
   exe = lib.getExe cfg.package;
   pg = config.services.postgresql;
   useMysql = cfg.database.type == "mysql";
   usePostgresql = cfg.database.type == "postgres";
@@ -23,9 +22,9 @@ let
     RUN_MODE = prod
     WORK_PATH = ${cfg.stateDir}
 
+    ${lib.generators.toINI { } cfg.settings}
 
-    ${optionalString (cfg.extraConfig != null) cfg.extraConfig}
   '';
 
   inherit (cfg.settings) mailer;
@@ -34,57 +33,57 @@ in
 
 {
   imports = [
-    (mkRenamedOptionModule
+    (lib.mkRenamedOptionModule
       [ "services" "gitea" "cookieSecure" ]
       [ "services" "gitea" "settings" "session" "COOKIE_SECURE" ]
     )
-    (mkRenamedOptionModule
+    (lib.mkRenamedOptionModule
       [ "services" "gitea" "disableRegistration" ]
       [ "services" "gitea" "settings" "service" "DISABLE_REGISTRATION" ]
     )
-    (mkRenamedOptionModule
+    (lib.mkRenamedOptionModule
       [ "services" "gitea" "domain" ]
       [ "services" "gitea" "settings" "server" "DOMAIN" ]
     )
-    (mkRenamedOptionModule
+    (lib.mkRenamedOptionModule
       [ "services" "gitea" "httpAddress" ]
       [ "services" "gitea" "settings" "server" "HTTP_ADDR" ]
     )
-    (mkRenamedOptionModule
+    (lib.mkRenamedOptionModule
       [ "services" "gitea" "httpPort" ]
       [ "services" "gitea" "settings" "server" "HTTP_PORT" ]
     )
-    (mkRenamedOptionModule
+    (lib.mkRenamedOptionModule
       [ "services" "gitea" "log" "level" ]
       [ "services" "gitea" "settings" "log" "LEVEL" ]
     )
-    (mkRenamedOptionModule
+    (lib.mkRenamedOptionModule
       [ "services" "gitea" "log" "rootPath" ]
       [ "services" "gitea" "settings" "log" "ROOT_PATH" ]
     )
-    (mkRenamedOptionModule
+    (lib.mkRenamedOptionModule
       [ "services" "gitea" "rootUrl" ]
       [ "services" "gitea" "settings" "server" "ROOT_URL" ]
     )
-    (mkRenamedOptionModule
+    (lib.mkRenamedOptionModule
       [ "services" "gitea" "ssh" "clonePort" ]
       [ "services" "gitea" "settings" "server" "SSH_PORT" ]
     )
-    (mkRenamedOptionModule
+    (lib.mkRenamedOptionModule
       [ "services" "gitea" "staticRootPath" ]
       [ "services" "gitea" "settings" "server" "STATIC_ROOT_PATH" ]
     )
 
-    (mkChangedOptionModule
+    (lib.mkChangedOptionModule
       [ "services" "gitea" "enableUnixSocket" ]
       [ "services" "gitea" "settings" "server" "PROTOCOL" ]
       (config: if config.services.gitea.enableUnixSocket then "http+unix" else "http")
     )
 
+    (lib.mkRemovedOptionModule [ "services" "gitea" "ssh" "enable" ]
       "It has been migrated into freeform setting services.gitea.settings.server.DISABLE_SSH. Keep in mind that the setting is inverted."
     )
-    (mkRemovedOptionModule [
+    (lib.mkRemovedOptionModule [
       "services"
       "gitea"
       "useWizard"
@@ -93,42 +92,42 @@ in
 
   options = {
     services.gitea = {
+      enable = lib.mkOption {
         default = false;
-        type = types.bool;
+        type = lib.types.bool;
         description = "Enable Gitea Service.";
       };